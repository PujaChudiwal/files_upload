['# 1st:    Go --> MenuBar --> click Database option ---> connect to Database '],[],['# Now run your sql script'],[],[],['######################### use myTestdb database and student table  ###############################'],[],[],['INSERT INTO `mytestdb`.`student`'],"['(studentId', 'fname', 'lname', 'class', 'age)']",['VALUES'],"['(9', "" 'ppp'"", "" 'dsdfasf'"", "" 'BE'"", ' 20);']",[],['select * from `mytestdb`.`student`;'],[],['########################### 1. create View #####################################################'],"['create view `mytestdb`.`Vstudent` as select fname', ' age from `mytestdb`.`student`;']",[],['update `mytestdb`.`student` set age = 100 where studentId=5;'],[],['################################## 2. create Index  ###############################################'],['create unique index classindex on `mytestdb`.`student`(studentid);'],[],['select * from `mytestdb`.`student`;'],[],"['# After executing the above statement', ' the index is created successfully. Now', ' run the below statement to see how MySQL internally performs this query.']","['EXPLAIN SELECT studentid', ' fname', "" lname FROM `mytestdb`.`student` WHERE class = 'BE';  ""]",[],['show indexes from `mytestdb`.`student`;'],[],['drop index classindex on `mytestdb`.`student`;'],[],[],['######################  creating 2nd table ###############################'],['desc principle;'],[],['INSERT INTO `mytestdb`.`Principle`'],"['(idPrinciple', ' studentId', 'Pname', 'Pemail', ' Pcontact', ' Plocation)']",['VALUES'],"['(12', ' 10', "" 'aaa'"", "" 'vsb@gmail.com'"", ' 00', "" 'Goa');""]",[],['select * from `mytestdb`.`Principle`;'],[],['########################### 3. create stored procedure   #########################################33'],[],[],['# using without parameter'],['DELIMITER //'],['CREATE PROCEDURE sp_student_principle ()'],['BEGIN'],['SELECT * FROM `mytestdb`.`student`;'],['SELECT * from `mytestdb`.`Principle`;'],['END //'],['DELIMITER ;'],[],[],['call sp_student_principle();'],[],['# using single parameter/ multiple parameter'],['DELIMITER //'],"['CREATE procedure p_STUDPRINC_PARAM (studentname varchar(30)', ' Princloc varchar(30))']",['BEGIN'],['SELECT * FROM `mytestdb`.`student` where fname=studentname;'],['SELECT * from `mytestdb`.`Principle` where Plocation=Princloc;'],['END //'],['DELIMITER ;'],[],"[""call p_STUDPRINC_PARAM('dds'"", "" 'MP');""]",[],[],['####################################    4. Triggers   #################################################################'],[],[],"['/* To create a trigger in MySQL', ' you need to: ']",[],['Use the CREATE TRIGGER statement with a trigger name and a trigger body'],"['Specify the trigger time', ' which can be BEFORE or AFTER']","['Specify the trigger event', ' which can be INSERT', ' UPDATE', ' or DELETE']",['Specify the table name on which the trigger will be applied'],['Use FOR EACH ROW to indicate that the trigger will execute for each row affected by the trigger event */'],[],[],['# Syntax: '],['CREATE TRIGGER trigger_name  trigger_time trigger_event  '],['ON table_name FOR EACH ROW  '],['BEGIN  '],['    --variable declarations  '],['    --trigger code  '],['END;    '],[],[],['CREATE TABLE employee(  '],"['    name varchar(45) NOT NULL', '    ']","['    occupation varchar(35) NOT NULL', '    ']","['    working_date date', '  ']",['    working_hours varchar(10)  '],[');  '],[],['INSERT INTO employee VALUES    '],"[""('Robin'"", "" 'Scientist'"", "" '2020-10-04'"", ' 12)', '  ']","[""('Warner'"", "" 'Engineer'"", "" '2020-10-04'"", ' 10)', '  ']","[""('Peter'"", "" 'Actor'"", "" '2020-10-04'"", ' 13)', '  ']","[""('Marco'"", "" 'Doctor'"", "" '2020-10-04'"", ' 14)', '  ']","[""('Brayden'"", "" 'Teacher'"", "" '2020-10-04'"", ' 12)', '  ']","[""('Antonio'"", "" 'Business'"", "" '2020-10-04'"", ' 11);  ']",[],['select * from employee;'],[],['# 1.1 =>> BEFORE INSERT TRIGGER'],['DELIMITER //'],['CREATE trigger TR_Beforeinsertemployee'],['BEFORE INSERT ON employee'],['FOR EACH ROW'],['BEGIN'],['IF NEW.working_hours<0 THEN SET NEW.working_hours = 0;'],['END IF;'],['END //'],[],['# call the BEFORE INSERT trigger'],['INSERT INTO employee VALUES    '],"[""('Peter'"", "" 'Former'"", "" '2020-10-08'"", ' -1);  ']",['  '],['# We can see that on inserting the negative values into the working_hours column of the table will automatically fill the zero value by a trigger.'],['INSERT INTO employee VALUES    '],"[""('Hena'"", "" 'Actor'"", "" '2020-10-012'"", ' -10);  ']",[],['select * from employee;'],[],['#### Show Triggers Using Pattern Matching  '],[],['USE mytestdb;  '],['SHOW TRIGGERS; '],[],['OR'],[],"[""SHOW TRIGGERS WHERE table = 'employee';""]",[],['####### see table list from our database'],['SHOW TABLES IN mytestdb;      '],[],[],['######## Drop trigger'],[],['drop trigger employee.TR_Beforeinsertemployee;'],[],[],[],['# 1.2 =>> AFTER INSERT TRIGGER'],[],['DELIMITER //  '],['Create Trigger TR_after_insert  '],['AFTER INSERT ON employee'],['FOR EACH ROW  '],['BEGIN  '],"['INSERT INTO employee VALUES (new.name', ' new.occupation', '   ']","['new.working_date', ' new.working_hours', ' CURTIME());  ']",['END //  '],[],[],['INSERT INTO employee VALUES    '],"[""('Shoumik'"", "" 'Engineer'"", "" '2035-01-07'"", ' 8', ' 347346438); ']",[],[],[],['### 1.3 =>> update trigger'],[],['CREATE TABLE employees_audit ('],"['    id INT AUTO_INCREMENT PRIMARY KEY', '']","['    employeeNumber INT NOT NULL', '']","['    lastname VARCHAR(50) NOT NULL', '']","['    changedat DATETIME DEFAULT NULL', '']",['    action VARCHAR(50) DEFAULT NULL'],[')'],[],['DELIMITER $$  '],['CREATE TRIGGER beforeupdate2  '],['BEFORE UPDATE  '],['ON employee FOR EACH ROW  '],['BEGIN  '],['    DECLARE error_msg VARCHAR(255);  '],['    Insert into employee_audit'],"[""    SET action = 'update'"", '']","['     employeeNumber = OLD.working_date', '']","['     lastname = OLD.name', '']",['     changedat = NOW(); '],['END $$    '],['DELIMITER ;  '],[],['UPDATE employee'],['SET '],"[""    name = 'Phan'""]",['WHERE'],"[""    working_date = '2020-10-12';""]",['    '],['    '],['    '],['SELECT * FROM employees_audit;'],['desc employees_audit;'],"['insert into employees_audit values(1', ' 100', "" ' '"", "" '2013-2-01'"", ' wo);']",[],['# Delete trigger'],['delimiter //'],['CREATE TRIGGER employee_del AFTER DELETE'],['ON employee'],['FOR EACH ROW'],"[""UPDATE employee SET working_date='2023-1-1' where working_date='2020-10-08'; //""]",['delimiter ;'],[],[],['select * from employee;'],[],[],[],[],['#########################################    NULL value replacement    ########################################################################'],[],['select * from principle;'],[],['# 1. using CASE'],"['select idPrinciple', ' ']","[""case when Pemail is null then 'N/A'""]",['else Pemail'],['end Email '],['from principle;'],[],[],['#2. Using ifnull'],"['select *', ' IFNULL(Pemail', "" 'N/A') as Email""]",['from principle;'],[],['# 3. using coalesce()'],"['select *', ' COALESCE(Pemail', "" 'N/A') as Email""]",['from principle;'],[],['select * from principle;'],[],[],[],['########################### SUBQUERY  ######################################'],[],[],[],['CREATE TABLE EMP ('],"['   ID INT', '']","['   FIRST_NAME CHAR(20) NOT NULL', '']","['   LAST_NAME CHAR(20)', '']","['   AGE INT', '']","['   SEX CHAR(1)', '']",['   INCOME FLOAT'],[');'],[],[],['INSERT INTO EMP VALUES'],"['   (1', "" 'Krishna'"", "" 'Sharma'"", ' 19', "" 'M'"", ' 2000)', '']","['   (2', "" 'Raj'"", "" 'Kandukuri'"", ' 20', "" 'M'"", ' 7000)', '']","['   (3', "" 'Ramya'"", "" 'Ramapriya'"", ' 25', "" 'F'"", ' 5000)', '']","['   (4', "" 'Alexandra'"", "" 'Botez'"", ' 26', "" 'F'"", ' 3000);']",['   '],['select * from EMP;'],['   '],['SELECT * FROM EMP WHERE ID IN (SELECT ID FROM EMP WHERE INCOME > 4000);'],[],['# Subquery with IN or NOT-IN Operator'],['  SELECT * FROM EMP WHERE FIRST_NAME NOT IN (SELECT FIRST_NAME FROM EMP);'],[],"['# Subqueries with ANY', ' ALL', ' or SOME']",['   SELECT * FROM EMP WHERE INCOME > ANY (SELECT INCOME FROM EMP);'],[],['# Row Subqueries---->If you need to get a single row you should use the row subquery.'],"['  SELECT * FROM EMP WHERE ROW(ID', ' FIRST_NAME) = (SELECT ID', ' FIRST_NAME FROM EMP WHERE id = 4);']",[],[],['# Subqueries with EXISTS or NOT EXISTS'],"['  SELECT studentId', ' lname', ' class FROM student s where EXISTS (SELECT * FROM Emp e']",['  WHERE s.studentId = e.ID);'],[],[],[],['SHOW PLUGINS;'],[],['select * from `mytestdb`.`student`;'],['select * from principle;'],[],[],['select * from principle group by Plocation;'],"['select Pname', ' Pemail', ' Plocation', '']","['ifnull((select studentId from student where studentId= principle.studentId)', ' 0) ']",['as Total'],['from principle group by Plocation;'],[],"['select studentId', ' fname', ' age from student where studentId In(select idPrinciple from principle);']",[],['# Count of Plocation using groupby'],['select * from (select count(idPrinciple) as count from principle  group by Plocation) as summary;'],[],"['select Pname', 'studentId', 'Plocation from principle where studentId IN(select studentId from student) order by Pname ;']","['select Pname', 'studentId', 'Plocation from principle where studentId Not IN(select studentId from student) order by Pname ;']",['select * from student where age = (select max(age) from student);'],['select * from student where age < (select avg(age) from student);'],[],[],['select * from `mytestdb`.`student`;'],['select * from principle;'],[],"['SELECT studentId', ' fname', ' ']",['('],['CASE WHEN studentId ='],['('],['SELECT idPrinciple from principle WHERE studentId=1'],[') '],"[""THEN 'UP' ELSE 'Pune' END) as M""]",['FROM student;'],[],['#### non corelated subquery'],"['SELECT studentId', ' AVG(age) ']",['FROM student GROUP BY fname'],['HAVING AVG(age)>=ALL '],['(SELECT AVG(age) FROM student GROUP BY fname);'],[],[],['################### Corelational query ###############################'],[],"['Select fname', ' studentId', ' age from student as s ']",['where ('],['  select count(*) from student as t'],['  where t.age>s.age'],[')<5;'],[],[],[],['WITH cte AS ('],"['    SELECT age', ' fname', ' ROW_NUMBER() OVER (ORDER BY age DESC) as rn']",['    FROM student'],[')'],"['SELECT fname', ' age', ' rn']",['FROM cte'],['WHERE rn <= 5;'],[],['SELECT'],"['  lname', '']","['  fname', '']",['  age'],['FROM student s1'],['WHERE s1.age < (SELECT avg(age)'],['                   FROM student s2'],['                   WHERE s2.studentId = s1.studentId);'],['                   '],[],[],"['SELECT Pname', ' idPrinciple']",['FROM principle p1'],['WHERE 20 > (SELECT count(*)'],['            FROM student s'],['            WHERE s.studentId = p1.studentId);'],['            '],['            '],['SELECT'],"['  lname', '']","['  fname', '']","['  age', ' studentId']",['FROM student s1'],['WHERE NOT EXISTS (SELECT idPrinciple'],['                  FROM principle'],['                  WHERE studentId = s1.studentId);'],['                  '],['UPDATE principle p'],['SET salary = (SELECT studentId'],['               FROM student s'],['               WHERE p.studentId ='],['                     s.studentID);  '],['                     '],['select * from student;'],['select * from principle;'],[],['############# dufference nested and corelated query   ##############3'],[],['## Q.1 Find details of principle who have no. of students.'],[],['SELECT * FROM principle WHERE '],['idPrinciple IN (SELECT studentId FROM student);'],[],['SELECT * FROM principle p where '],['EXISTS (SELECT studentId FROM student s '],['WHERE s.studentId=p.studentId);'],[],[],[],['##################### ############################################# #####################################'],[],['USE WORKER;'],[],['SELECT * FROM WORKER1;'],['select* FROM BONUS;'],['SELECT * FROM TITLE;'],[],['# Ranking Rows Based on a Specific Ordering Criteria'],"['select worker_ID', ' First_Name', ' Salary', ' RANK() over (order by Salary desc) AS ranking from WORKER1 ;']",[],[],['# list first 5 rows '],['with worker_ranking as '],"['(select worker_ID', ' First_Name', ' Salary', ' ']",['RANK() over (order by Salary desc) '],['AS ranking from WORKER1) '],['select * from worker_ranking where ranking <=5 order by ranking;'],[],[],['# list last 5 rows '],['with worker_ranking as '],"['(select worker_ID', ' First_Name', ' Salary', ' ']",['RANK() over (order by Salary desc) '],['AS ranking from WORKER1) '],['select * from worker_ranking where ranking >=4 order by ranking;'],[],[],['# find 2nd heighest rows'],['with worker_ranking as '],"['(select worker_ID', ' First_Name', ' Salary', ' ']",['RANK() over (order by Salary desc) '],['AS ranking from WORKER1) '],['select * from worker_ranking where ranking = 3 ;'],[],[],"['# List the First 50% Rows in a Result Set -----> NTILE(2) divides the result set into 2 subsets with the same quantity of elements; for each row', ' it returns a 1 or a 2 depending on the subset where the row is located.']",['with worker_ranking as '],"['(select worker_ID', ' First_Name', ' Salary', ' ']",['NTILE(2) over (order by Salary desc) AS ntile1 from WORKER1) '],['select * from worker_ranking where ntile1 = 1 order by salary desc ;'],[]
