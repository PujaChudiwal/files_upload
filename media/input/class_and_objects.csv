class and objects:
class : it is collection similar types of objects
plan,format,blue print --



object:

real time entity


physical

attributes
methods

function and methods:

function --> standloan entity
methods  --> part of class/element of class


Encapsulcation :

class : wrapper --> 

attributes -- variables

operation --> methods

class --> variables + methods -- single unit 


self --> keyword -->
object reference --> 

object  --> self


name
age
sal


o1


o2


o3 

interview :

self --> other word 

Types of variables:

instance variables --object level -- 99%
static variables
local variables


instance :

value changes object to object --> variables  -- instance


self.variable

self.id
self.name
self.price

instance methods:
operation --> objects
instance variable
self --> 


static variable: class level variable

static variable


instance variable  -- instance methods - self
instance.method name



static variable --> class methods --> cls
class method
classname.methodname


last:

local varibale --- static method


=====================================
instance varibale
static variable
local variable
=====================================
instance method
class method
static method
======================================


class Test:
    company_name = 'Barclays'
    def __init__(self,p,pn,pp):
        self.prdid =p
        self.prdname=pn
        self.prdprice=pp

    def prd_details(self):
"        print(""prd id:""",self.prdid)
"        print(""prn name:""",self.prdname)
"        print(""prd price:""",self.prdprice)
        result  = self.price_cal(self.prdprice)
"        print(""result :""",result)
"        print(""Company Name:""",Test.company_name)


    @staticmethod
    def price_cal(pr):
        temp = pr * 750
        return temp

    @classmethod
    def class_variable_updation(cls):
        cls.company_name = 'IBM'

    @staticmethod
    def add(x,y):
        return x+y


t1 = Test(101,'alumina',75000)
t1.prd_details()
r = t1.add(45,75)
print(r)

